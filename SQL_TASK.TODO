Example Tags:
AAA
AAB
AAC
AAD
AAE
AAF etc..

Example Employees:
E001
E002
E003
E004
E005
E006 etc..

Packets:
AAA,80,202101191531,AAC,AAD,AAE
AAA,80,202101191531,AAC,AAD,AAE
AAA,80,202101191531,AAC,AAD,AAE
AAA,80,202101191531,AAC,AAD,AAE
AAA,80,202101191531,AAC,AAD,AAE
AAA,79,202101191531,AAC,AAD,AAE,AAF
AAA,80,202101191531,AAC,AAD,AAE,AAZ
AAA,80,202101191531,AAC,AAX
AAA,80,202101191531,AAC,AAD,AAE
	
	Def:
		AAA = Employee Tag
		80 = Battery level of tag
		202101191531 = timestamp of data recorded
		AAC,AAD,AAE = peer tags (AAA contacted with AAC,AAD,AAE)

Table Tags:
    tag_id = CharField(max_length=50,unique=True)
    battery_level = models.IntegerField(blank=True,null=True)
    mapped_status = models.PositiveSmallIntegerField(choices=MAPPED_STATUS,default=UNMAPPED,blank=True,null=True)
    last_ping = models.DateTimeField(null=True,blank=True)
    created_at = models.DateTimeField(auto_now_add=True,null=True)
    updated_at = models.DateTimeField(auto_now=True,null=True)


Table Employee:
    employee_id = CharField(max_length=50,unique=True)
    name = models.CharField(max_length=50)
    phone_number = models.CharField(max_length=50,unique=True)
    tag = models.OneToOneField(Tag,on_delete=models.SET_NULL,null=True,blank=True)
    mapped_at = models.DateTimeField(null=True,blank=True)
    created_at = models.DateTimeField(auto_now_add=True,null=True)
    updated_at = models.DateTimeField(auto_now=True,null=True)


Table BackupPacketTable:
    packet_data = models.TextField(blank=True, null=True)
    created_at = models.DateTimeField(auto_now_add=True,blank=True, null=True)
    status = models.IntegerField(blank=True, null=True)

Table Contacts:
    device_id = models.ForeignKey(Tag,on_delete=models.CASCADE,null=True,related_name='contact_device')
    battery_level = models.IntegerField(blank=True,null=True)
    employee_id = models.ForeignKey(Employee,on_delete=models.SET_NULL,null=True,related_name='contact_employee')
    recorded_at = models.DateTimeField(null=True)
    contacted_with_devices = models.ManyToManyField(Tag,related_name='contacted_with_devices')
    contacted_with_employees = models.ManyToManyField(Employee,related_name='contacted_with_employees')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

Table ConsolidatedContacts:
    device_id = models.ForeignKey(Tag,on_delete=models.SET_NULL,null=True,related_name='con_contact_device')
    battery_level = models.IntegerField(blank=True,null=True)
    employee_id = models.ForeignKey(Employee,on_delete=models.SET_NULL,null=True,related_name='con_contact_employee')
    recorded_at = models.DateTimeField(blank=True,null=True)
    contacted_with_devices = models.ManyToManyField(Tag,related_name='con_contacted_with_devices')
    contacted_with_employees = models.ManyToManyField(Employee,related_name='con_contacted_with_employees')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

Table BackupContacts:
    device_id = models.ForeignKey(Tag,on_delete=models.CASCADE,null=True,related_name='backup_contact_device')
    battery_level = models.IntegerField(blank=True,null=True)
    battery_status = models.PositiveSmallIntegerField(choices=BATTERY_STATUS,blank=True,null=True)
    employee_id = models.ForeignKey(Employee,on_delete=models.SET_NULL,null=True,related_name='backup_contact_employee')
    recorded_at = models.DateTimeField(null=True)
    contacted_with_devices = models.ManyToManyField(Tag,related_name='backup_contacted_with_devices')
    contacted_with_employees = models.ManyToManyField(Employee,related_name='backup_contacted_with_employees')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    status = models.PositiveSmallIntegerField(default=0,blank=True,null=True)


Table RealBackupPacketTable:
    packet_data = models.TextField(blank=True, null=True)
    created_at = models.DateTimeField(blank=True, null=True)
    status = models.IntegerField(blank=True, null=True)
    
    
    
    
    
    
    ----------------------------------------------------------------------------------------------------------------
    
    
    INSERT INTO `BackupPacketTable` (`packet_data`, `created_at`, `status`) VALUES ('AAB,70,202101191941,AAC,AAD,AAE', '2021-01-19 19:42:24', '1');

INSERT INTO `BackupPacketTable` (`packet_data`, `created_at`, `status`) VALUES ('AAC,85,202101191941,AAC,AAD,AAE', '2021-01-19 19:42:24', '1');

INSERT INTO `BackupPacketTable` (`packet_data`, `created_at`, `status`) VALUES ('AAD,80,202101191941,AAC,AAD,AAE', '2021-01-19 19:42:24', '1');

INSERT INTO `BackupPacketTable` (`packet_data`, `created_at`, `status`) VALUES ('AAE,80,202101191941,AAC,AAD,AAE', '2021-01-19 19:42:24', '1');

INSERT INTO `BackupPacketTable` (`packet_data`, `created_at`, `status`) VALUES ('AAF,80,202101191941,AAC,AAD,AAE', '2021-01-19 19:42:24', '1');

INSERT INTO `BackupPacketTable` (`packet_data`, `created_at`, `status`) VALUES ('AAG,50,202101191941,AAC,AAD,AAE', '2021-01-19 19:42:24', '1');

INSERT INTO `BackupPacketTable` (`packet_data`, `created_at`, `status`) VALUES ('AAH,80,202101191941,AAC,AAD,AAE', '2021-01-19 19:42:24', '1');

INSERT INTO `BackupPacketTable` (`packet_data`, `created_at`, `status`) VALUES ('AAI,89,202101191941,AAC,AAD,AAE', '2021-01-19 19:42:24', '1');

INSERT INTO `BackupPacketTable` (`packet_data`, `created_at`, `status`) VALUES ('AAA,67,202101191941,AAF', '2021-01-19 19:42:24', '1');
    
    
                    
     X----------------------------------------------------------------------------------------------------------------X                    
                      

/* Procedure to extract data from the table 'BackupPacketTable'
   processing the contents of the column 'BackupPacketTable.packet_data'
   Inserting the processed values into the table 'Contacts'
   Inserting data into the table 'ConsolidatedContacts' by Removing redundant records/row from the table 'Contacts'
   Transfering all the contents of the table 'BackupPacketTable' to 'RealBackupPacketTable'
   Finally deleting the contents of the table 'BackupPacketTable' to receive new 'packet_data' from Sensor
*/


DROP PROCEDURE IF EXISTS extracted;
DELIMITER $$

CREATE PROCEDURE extracted (IN pckt_data VARCHAR(1000)) 
	BEGIN
    	#Assigning variables to insert them into the table 'Contacts'
		SET @battery_percentage = CONVERT(substring(pckt_data,5,2), DECIMAL);
		SET @deviceID = substring(pckt_data,1,3); 
        SET @dummyTime = CONCAT(substring(pckt_data, 8, 12),"00");
        SET @createdTime = CONVERT(@dummyTime, DATETIME);
        SET @recordedTime = date_add(@createdTime, interval 5 second);
        SET @updatedTime = date_add(@recordedTime, interval 120 second);
        SET @employeeID = (SELECT employee_id from Employee WHERE tag = @deviceID);
        
        # Variable to use with the LOOP below
        SET @i = 21;
		SET @j = 3;
        SET @k = 0;
        SET @temp = ' ';
        
        # Creating temporary table to store the string of 'Contacted_Devices' in Array format
        CREATE TEMPORARY TABLE IF NOT EXISTS DEVICES(
            DEVICE_EXTRACTED VARCHAR(50));
            
            DEVICES_LOOP: LOOP

                IF  @k > 2 THEN 
                    LEAVE  DEVICES_LOOP;
                END  IF;

                IF @k < 3 THEN
                    SET @temp = substring(pckt_data, @i, @j);                
                    INSERT into DEVICES(DEVICE_EXTRACTED) VALUES (@temp);
                    SET @k = @k + 1;
                    SET @i = @i +4;
                    ITERATE  DEVICES_LOOP;
                END  IF;
                
			END LOOP;
        # Assigning the extracted devices and employee_id into respective variables                                                     
        SET @contactedDevices = (SELECT REPLACE(GROUP_CONCAT(DEVICE_EXTRACTED, '\n'), ',', ' ') from DEVICES); 
        SET @contactedEmployees = (SELECT REPLACE(GROUP_CONCAT(employee_id, '\n'), ',', ' ') from Employee, DEVICES WHERE tag in (DEVICES.DEVICE_EXTRACTED));
        
        #SELECT @battery_percentage AS Battery, @deviceID, @contactedDevices, @createdTime, @recordedTime, @updatedTime, @employeeID, @contactedEmployees;
        
        INSERT INTO Contacts(battery_level, contacted_with_devices, contacted_with_employees, created_at, device_id, employee_id, recorded_at, updated_at)
        VALUES(@battery_percentage, @contactedDevices, @contactedEmployees, @createdTime, @deviceID, @employeeID, @recordedTime, @updatedTime);
        
        
    END $$
DELIMITER ;

SET @parameter = (SELECT packet_data from BackupPacketTable);

CALL extracted(@parameter);
